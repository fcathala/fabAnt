<?xml version="1.0"?>
<project xmlns:sf="antlib:com.salesforce" name="fabPack" default="validate" >
  <!-- fabPack - Ant Migration Tool build.xml -->

  <description>
  fabPack - Fabrice Cathala - February-2021
  </description>

  <!-- Default Time-out = 200 * 10,000 =  33 minutes -->
  <property name="sf.maxPoll" value="200"/>
  <!-- Default waiting = 10,000 (10 seconds) -->
  <property name="sf.pollWaitMillis" value="10000"/>
  <!-- Default batch size = 10 (bulk operations only) -->
  <property name="sf.batchsize" value="400"/>

  <!-- Direct access to environment variables -->
  <!-- https://stackoverflow.com/questions/936793/define-ant-property-from-environment-with-default-value -->
  <property environment="env"/>

  <!-- Locate Salesforce's Ant jar in the same folder as build.xml -->
  <taskdef
    resource="com/salesforce/antlib.xml"
    uri="antlib:com.salesforce">
    <classpath>
<!--        <pathelement location="${toolkit}/ant-salesforce.jar" /> -->
        <pathelement location="./ant-salesforce.jar" /> 
    </classpath>
  </taskdef>

  <!-- Build the required folder structure if needed -->
  <target name="folders">
    <mkdir dir="archives"/>
  </target>

  <!-- Add extra information to the log -->
  <target name="log">
    <tstamp>
      <format property="current.time" pattern="MM/dd/yyyy HH:mm:ss" />
      <format property="t.stamp" pattern="yyyyddMM-HHmmss" />
    </tstamp>
    <echo message="-------------------------------------------------"/>
    <echo message="fabPack log file: ${current.time}"/>
    <echo message="-------------------------------------------------"/>
    <echo message="folder prefix: ${t.stamp}"/>
    <echo message="-------------------------------------------------"/>
    <echo message="action: ${action}"/>
    <echo message="location: ${toolkit}/ant-salesforce.jar"/>
    <echo message="serverurl: ${sf.url}"/>
    <echo message="maxPoll: ${sf.maxPoll}"/>
    <echo message="pollWaitMillis: ${sf.pollWaitMillis}"/>
    <echo message="packageNames: ${mdt}"/>
    <echo message="singlePackage: true"/>
    <echo message="unpackaged: ${mdt}"/>
    <echo message="retrieveTarget: ${src}"/>
    <echo message="deployRoot: ${src}"/>
    <echo message="username: ${sf.usr}"/>
    <!-- Uncomment for troubleshooting only
    <echo message="password: ${sf.psw}"/> 
    -->
  </target>

  <!-- Reset folders -->
  <target name="cleanup">
    <delete dir="${dir}"/>
    <mkdir dir="${dir}"/>
  </target>

  <!-- Move folders -->
  <target name="move">
    <copy todir="${dst}">
      <fileset dir="${src}"/>
    </copy>
  </target>

  <!-- (2) Retrieve all supported metadata types -->
	<!-- Retrieve the information on all supported metadata type -->
  <target name="describeMetadata">
    <sf:describeMetadata
      username="${sf.username}"
      password="${sf.password}"
      sessionId="${sf.sessionId}"
      serverurl="${sf.serverurl}"
    />
  </target>

  <!-- (3) Download components from manifest -->
  <!-- Shows retrieving code; only succeeds if done after deployCode -->
  <target name="retrieveCode">
    <!-- Retrieve the contents listed in the file codepkg/package.xml into the codepkg directory -->
    <sf:retrieve
      username="${sf.username}"
      password="${sf.password}"
      sessionId="${sf.sessionId}"
      serverurl="${sf.serverurl}"
      maxPoll="${sf.maxPoll}"
      retrieveTarget="codepkg"
      unpackaged="codepkg/package.xml"
    />
  </target>

  <!--  (4) Download components from package -->
  <!-- Retrieve metadata for all the packages specified under packageNames -->
  <target name="retrievePkg">
    <sf:retrieve
      username="${sf.username}"
      password="${sf.password}"
      sessionId="${sf.sessionId}"
      serverurl="${sf.serverurl}"
      maxPoll="${sf.maxPoll}"
      retrieveTarget="retrieveOutput"
      packageNames="${sf.pkgName}"
      />
  </target>

  <!-- (5) Validate components on target --> 
  <!-- Shows check only; never actually saves to the server -->
  <target name="deployCodeCheckOnly">
    <sf:deploy
      username="${sf.username}"
      password="${sf.password}"
      sessionId="${sf.sessionId}"
      serverurl="${sf.serverurl}"
      maxPoll="${sf.maxPoll}"
      deployRoot="codepkg"
      checkOnly="true"
      />
  </target>

  <!-- (6) Create components on target -->
  <!-- Shows deploying code & running tests for code in directory -->
  <target name="deployCode">
    <!-- Upload the contents of the "codepkg" directory, running the tests for just 1 class -->
    <sf:deploy
      username="${sf.username}"
      password="${sf.password}"
      sessionId="${sf.sessionId}"
      serverurl="${sf.serverurl}"
      maxPoll="${sf.maxPoll}"
      deployRoot="codepkg"
      testLevel="RunLocalTests"
      rollbackOnError="true"
      />
  </target>

  <!-- (7) Delete components on target -->
  <!-- Shows removing code; only succeeds if done after deployCode -->
  <target name="undeployCode">
    <sf:deploy
      username="${sf.username}"
      password="${sf.password}"
      sessionId="${sf.sessionId}"
      serverurl="${sf.serverurl}"
      maxPoll="${sf.maxPoll}"
      deployRoot="removecodepkg"
      />
  </target>

</project>
